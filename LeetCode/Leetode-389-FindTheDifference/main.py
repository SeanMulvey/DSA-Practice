# DSA practice for LeetCode problem 389: Find The Difference (Easy)
################################################################################################################################
# Problem:
    # You are given two strings s and t.
    # String t is generated by random shuffling string s and then add one more letter at a random 
    # position. Return the letter that was added to t.
################################################################################################################################
# Inital Thoughts:
    # We can sort s and t and then compare each element of them and return t[i] when there's a difference
    # If we get to the end of s and there is no difference, then the difference would have to be at the end of t
################################################################################################################################
#Pseudocode:
    # s = sort(s)
    # t = sort(t)
    # for i = 0 to length of s:
        # if s[i] != t[i]:
            # return t[i]
    # return t[length of t - 1]
################################################################################################################################
# Python Code:

def find_the_difference(s,t):
    s = ''.join(sorted(s))
    t = ''.join(sorted(t))
    for i in range(len(s)):
        if s[i] != t[i]:
            return t[i]
    return t[-1]



# Test the function
print(find_the_difference("abcd", "abcde"))  # Output: e
print(find_the_difference("a", "aa"))  # Output: a
print(find_the_difference("ae", "aea"))  # Output: a
print(find_the_difference("abcd", "abcdd"))  # Output: d
print(find_the_difference("xyz", "xyza"))  # Output: z
print(find_the_difference("apple", "aplle"))  # Output: e
print(find_the_difference("", "e"))  # Output: e
